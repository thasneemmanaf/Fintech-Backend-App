openapi: 3.0.0
info:
  title: My Fintech API
  version: 1.0.0
  description: API documentation for a Fintech application
servers:
  - url: /api
    description: API Server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Company:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        organisationNumber:
          type: string
        status:
          type: string
          enum: [active, inactive]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Card:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        cardNumber:
          type: string
          description: Masked card number
        cardHolder:
          type: string
        expiryDate:
          type: string
        status:
          type: string
          enum: [active, inactive, blocked]
        limit:
          type: number
        currency:
          type: string
        spentAmount:
          type: number
        availableAmount:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Invoice:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        invoiceNumber:
          type: string
        amount:
          type: number
        currency:
          type: string
        dueDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, paid, overdue]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Transaction:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        cardId:
          type: string
        amount:
          type: number
        currency:
          type: string
        description:
          type: string
        merchant:
          type: string
        category:
          type: string
        transactionDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, completed, declined]
        dataPoints:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DashboardData:
      type: object
      properties:
        company:
          $ref: "#/components/schemas/Company"
        card:
          $ref: "#/components/schemas/Card"
        invoice:
          $ref: "#/components/schemas/Invoice"
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
        totalTransactions:
          type: integer
    Error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
    PaginatedResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
        data:
          type: object
          properties:
            items:
              type: array
              items:
                type: object
            pagination:
              type: object
              properties:
                total:
                  type: integer
                page:
                  type: integer
                limit:
                  type: integer
                totalPages:
                  type: integer
paths:
  /companies:
    get:
      summary: Get all companies for the authenticated user
      tags:
        - Companies
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Company"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies/{id}:
    get:
      summary: Get a company by ID
      tags:
        - Companies
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Company data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/Company"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies/{id}/dashboard:
    get:
      summary: Get dashboard data for a company
      tags:
        - Companies
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dashboard data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/DashboardData"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies/{companyId}/cards:
    get:
      summary: Get all cards for a company
      tags:
        - Cards
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of cards
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Card"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cards/{id}:
    get:
      summary: Get a card by ID
      tags:
        - Cards
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Card data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/Card"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Card not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies/{companyId}/transactions:
    get:
      summary: Get transactions for a company
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: companyId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Paginated transactions data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponse"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Company not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
